{"category":"wav_player","color":"#1582d5","blocks":["__wav_player_Play","__wav_player_Setting"],"jscode":"// Block __wav_player_Play\nvar __wav_player_Play_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1 %2\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"playwav\"\n        },\n        {\n            \"type\": \"input_value\",\n            \"name\": \"playwav\"\n        }\n    ],\n    \"message1\": \"%1 %2\",\n    \"args1\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"volume\"\n        },\n        {\n            \"type\": \"field_number\",\n            \"value\": 0,\n            \"name\": \"volume\"\n        }\n    ],\n    \"colour\": \"#1582d5\"\n};\n\nwindow['Blockly'].Blocks['__wav_player_Play'] = {\n    init: function() {\n        this.jsonInit(__wav_player_Play_json);\n    }\n};\n\nwindow['Blockly'].Python['__wav_player_Play'] = function(block) {\n    var playwav = Blockly.Python.valueToCode(block, 'playwav', Blockly.Python.ORDER_NONE);\nvar volume = block.getFieldValue('volume');\n    return `playwav(${playwav},${volume})` + \"\\n\";\n};\n\n// Block __wav_player_Setting\nvar __wav_player_Setting_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"playwav_setting\"\n        }\n    ],\n    \"colour\": \"#1582d5\"\n};\n\nwindow['Blockly'].Blocks['__wav_player_Setting'] = {\n    init: function() {\n        this.jsonInit(__wav_player_Setting_json);\n    }\n};\n\nwindow['Blockly'].Python['__wav_player_Setting'] = function(block) {\n        return `from machine import I2S\nfrom wav import wave\n\ndef playwav(filePath,volume):\n    wav = wave.open(filePath)\n    i2s = I2S(mode=I2S.MODE_MASTER | I2S.MODE_TX | I2S.MODE_DAC_BUILT_IN)\n    i2s.set_dac_mode(i2s.DAC_RIGHT_EN)\n    i2s.sample_rate(wav.getframerate())\n    i2s.bits(wav.getsampwidth() * 8)\n    i2s.nchannels(wav.getnchannels())\n    i2s.volume(volume)\n    while True:\n        data = wav.readframes(256)\n        if len(data) > 0:\n            i2s.write(data)\n        else:\n            wav.close()\n            i2s.deinit()\n            break` + \"\\n\";\n};\n\n","code":{"Play":["window['Blockly'].Python['__wav_player_Play'] = function(block) {\n    var playwav = Blockly.Python.valueToCode(block, 'playwav', Blockly.Python.ORDER_NONE);\nvar volume = block.getFieldValue('volume');\n    return `playwav(${playwav},${volume})` + \"\\n\";\n};\n\n","playwav(${playwav},${volume})"],"Setting":["window['Blockly'].Python['__wav_player_Setting'] = function(block) {\n        return `from machine import I2S\nfrom wav import wave\n\ndef playwav(filePath,volume):\n    wav = wave.open(filePath)\n    i2s = I2S(mode=I2S.MODE_MASTER | I2S.MODE_TX | I2S.MODE_DAC_BUILT_IN)\n    i2s.set_dac_mode(i2s.DAC_RIGHT_EN)\n    i2s.sample_rate(wav.getframerate())\n    i2s.bits(wav.getsampwidth() * 8)\n    i2s.nchannels(wav.getnchannels())\n    i2s.volume(volume)\n    while True:\n        data = wav.readframes(256)\n        if len(data) > 0:\n            i2s.write(data)\n        else:\n            wav.close()\n            i2s.deinit()\n            break` + \"\\n\";\n};\n\n","from machine import I2S\nfrom wav import wave\n\ndef playwav(filePath,volume):\n    wav = wave.open(filePath)\n    i2s = I2S(mode=I2S.MODE_MASTER | I2S.MODE_TX | I2S.MODE_DAC_BUILT_IN)\n    i2s.set_dac_mode(i2s.DAC_RIGHT_EN)\n    i2s.sample_rate(wav.getframerate())\n    i2s.bits(wav.getsampwidth() * 8)\n    i2s.nchannels(wav.getnchannels())\n    i2s.volume(volume)\n    while True:\n        data = wav.readframes(256)\n        if len(data) > 0:\n            i2s.write(data)\n        else:\n            wav.close()\n            i2s.deinit()\n            break"]}}